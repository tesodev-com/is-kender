@keyframes spin {
    100% {
        transform: rotate(360deg);
    }
}

$largeSize: (
    "": (
        padding: 16px,
        font-size: 20px,
        border-radius: 12px,
        -moz-border-radius: 12px,
        -webkit-border-radius: 12px,
        line-height: 32px,
    ),
    ".rounded": (
        border-radius: 32px,
        -moz-border-radius: 32px,
        -webkit-border-radius: 32px,
    ),
    ".shadowed": (
        box-shadow: 0px 20px 56px -16px rgb(47 91 207 / 80%),
    ),
);
$mediumSize: (
    "": (
        padding: 16px,
        font-size: 18px,
        border-radius: 8px,
        -moz-border-radius: 8px,
        -webkit-border-radius: 8px,
        line-height: 24px,
    ),
    ".rounded": (
        border-radius: 28px,
        -moz-border-radius: 28px,
        -webkit-border-radius: 28px,
    ),
    ".shadowed": (
        box-shadow: 0px 12px 48px -12px rgb(47 91 207 / 80%),
    ),
);
$smallSize: (
    "": (
        padding: 12px,
        font-size: 14px,
        border-radius: 6px,
        -moz-border-radius: 6px,
        -webkit-border-radius: 6px,
        line-height: 16px,
    ),
    ".rounded": (
        border-radius: 20px,
        -moz-border-radius: 20px,
        -webkit-border-radius: 20px,
    ),
    ".shadowed": (
        box-shadow: 0px 8px 40px -8px rgb(47 91 207 / 80%),
    ),
    "> svg": (
        width: 16px,
        height: 16px,
    ),
);
$primaryTheme: (
    "": (
        background: $primary500,
        color: #fff,
    ),
    ":hover": (
        background: $primary600,
        color: #fff,
    ),
    ":active": (
        background: $primary600,
        border: 1.5px solid $primary700,
        color: #fff,
    ),
    ":not(:active):focus": (
        background: $primary500,
        border: 1.5px solid $primary700,
        color: #fff,
    ),
    ":disabled": (
        background: $neutral300,
        color: #fff,
        border: none,
    ),
);
$secondaryTheme: (
    "": (
        background: transparent,
        color: $primary500,
        border: 1.5px solid $primary500,
    ),
    ":hover": (
        background: $primary100,
        color: $primary500,
    ),
    ":not(:active):focus": (
        background: $neutral100,
        border: 1.5px solid $primary500,
        color: $primary500,
    ),
    ":active": (
        background: $primary400,
        border: 1.5px solid $primary500,
        color: #fff,
    ),
    ":disabled": (
        background: $neutral100,
        color: $neutral400,
        border: 1.5px solid $neutral400,
    ),
);
$ghostTheme: (
    "": (
        background: transparent,
        color: $primary500,
        border: none,
    ),
    ":hover": (
        background: transparent,
        box-shadow: 0 1px 1px rgb(0 0 0 / 20%),
        color: $primary700,
    ),
    ":not(:active):focus": (
        background: transparent,
        border: none,
        color: $primary700,
    ),
    ":active": (
        background: transparent,
        border: none,
        color: $primary400,
    ),
    ":disabled": (
        background: transparent,
        color: $neutral400,
        border: none,
    ),
);
$sizes: (
    "large": $largeSize,
    "medium": $mediumSize,
    "small": $smallSize,
);
$types: (
    "primary": $primaryTheme,
    "secondary": $secondaryTheme,
    "ghost": $ghostTheme,
);

.button {
    display: flex;
    align-items: center;
    gap: 10px;
    font-weight: 500;
    letter-spacing: 0.04em;
    border: 1.5px solid transparent;
    cursor: pointer;
    justify-content: center;

    > svg {
        width: 20px;
        height: 20px;
    }

    .spinner {
        margin: 0;
        border-radius: 100%;
        border-width: 3px;
        border-style: solid;
        border-image: initial;
        border-color: $primary500 $neutral300 $neutral300;
        animation: 1s linear 0s infinite normal none running spin;
    }

    &:disabled {
        cursor: not-allowed;

        .spinner {
            border-color: $neutral300 white white;
        }
    }

    &:focus {
        outline: none;
    }


    @each $sizeName, $size in $sizes {
        &.#{$sizeName} {
            @each $selector, $variables in $size {
                &#{$selector} {
                    @each $variable, $value in $variables {
                        #{$variable}: $value;
                    }
                }
            }
        }
    }

    @each $typeName, $typeVariables in $types {
        &.#{$typeName} {
            @each $type, $value in $typeVariables {
                &#{$type} {
                    @each $variable, $value in $value {
                        #{$variable}: $value;
                    }
                }
            }
        }
    }

    &.fluid {
        width: 100%;
    }
}
